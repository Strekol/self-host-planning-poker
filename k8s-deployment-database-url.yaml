# Kubernetes deployment using DATABASE_URL for simplified configuration
# This approach uses a single environment variable for database connection

---
apiVersion: v1
kind: Secret
metadata:
  name: planning-poker-database-url
  namespace: default
type: Opaque
stringData:
  # PostgreSQL example:
  DATABASE_URL: "postgresql://username:password@postgres-host:5432/planning_poker"
  # MySQL example:
  # DATABASE_URL: "mysql://username:password@mysql-host:3306/planning_poker"
  # SQLite example (for persistent storage):
  # DATABASE_URL: "sqlite:///data/database.db"
  SECRET_KEY: "your-flask-secret-key-here"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: planning-poker-url
  namespace: default
  labels:
    app: planning-poker-url
spec:
  replicas: 3
  selector:
    matchLabels:
      app: planning-poker-url
  template:
    metadata:
      labels:
        app: planning-poker-url
    spec:
      containers:
      - name: planning-poker
        image: your-registry/planning-poker:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: planning-poker-database-url
              key: DATABASE_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: planning-poker-database-url
              key: SECRET_KEY
        - name: FLASK_DEBUG
          value: "false"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - python
            - /app/healthcheck.py
            - full
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - python
            - /app/healthcheck.py
            - app
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: planning-poker-url-service
  namespace: default
  labels:
    app: planning-poker-url
spec:
  selector:
    app: planning-poker-url
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
